{"version":3,"sources":["./src/app/cmps/login/login.component.ts","./src/app/cmps/login/login.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/cmps/item-preview/item-preview.component.ts","./src/app/cmps/item-preview/item-preview.component.html","./src/environments/environment.ts","./src/app/pages/item-app/item-app.component.ts","./src/app/pages/item-app/item-app.component.html","./src/app/cmps/user-setting/user-setting.component.ts","./src/app/cmps/user-setting/user-setting.component.html","./src/app/store/app.effects.ts","./src/app/store/store.ts","./src/app/root-component/index.ts","./src/app/services/async-storage.service.ts","./src/app/cmps/item-list/item-list.component.ts","./src/app/cmps/item-list/item-list.component.html","./src/app/cmps/item-edit/item-edit.component.ts","./src/app/cmps/item-edit/item-edit.component.html","./src/app/app.module.ts","./src/app/store/reducers/item.reducer.ts","./src/app/services/upload_Service.ts","./src/app/services/item.service.ts","./src/app/store/actions/user.actions.ts","./src/app/store/reducers/user.reducer.ts","./src/app/services/user.service.ts","./src/app/store/actions/item.actions.ts","./src/app/cmps/app-header/app-header.component.ts","./src/app/cmps/app-header/app-header.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router'; \nimport { Store } from '@ngrx/store';\nimport { Login, SaveUser } from '../../store/actions/user.actions';\nimport { Observable, of } from 'rxjs';\nimport { User } from 'src/app/models/item';\nimport { State } from '../../store/store';\nimport { pluck } from 'rxjs/operators';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\n// interface signUpCredentials {\n//   username: any,\n//   password: any,\n//   fullname: any,\n//   isAdmin:boolean,\n// }\nexport class LoginComponent implements OnInit {\n  credentials :any= {\n    username: \"\",\n    password: \"\",\n    fullname: \"\",\n    isAdmin: false,\n  };\n  signUpCredentials:any= {\n    username: \"\",\n    password: \"\",\n    fullname: \"\",\n    isAdmin: false,\n  };\n  modalOpen:Boolean  =true;\n  loggedInUser = false; \n  loggedUser$: Observable<User|null|undefined>;\n  constructor(private router: Router, private route: ActivatedRoute,private store: Store<State>) { \n    this.loggedUser$ = this.store.select('userState').pipe(pluck('loggedUser'));\n\n  }\n\n  ngOnInit(): void {\n  }\n  login(){\n    this.store.dispatch(new Login (this.credentials));\n    this.router.navigate(['home']);\n  }\nasync  signup(){\nawait this.store.dispatch(new SaveUser (this.signUpCredentials));\nawait this.store.dispatch(new Login (this.signUpCredentials));\nthis.router.navigate(['home']);\n}\n\n  \n  closeModal(){\n    this.modalOpen = false\n    this.router.navigate(['home']);\n      }\n}\n","\n    <section [hidden]=\"!modalOpen\" class=\"signup-container modalWrapper\">\n      <main class=\"main-display\">\n        <button class=\"close-modal-btn\" (click)=\"closeModal()\">❌</button>\n        <form class=\"signup-wraaper\" (submit)=\"$event.preventDefault();login()\">\n          <label for=\"\">login</label>\n          <input\n            type=\"text\"\n            placeholder=\"username\"\n            [(ngModel)]=\"credentials.username\"\n            [ngModelOptions]=\"{standalone: true}\"\n            class=\"signup-input\"\n          />\n          <input\n            type=\"password\"\n            placeholder=\"password\"\n            [(ngModel)]=\"credentials.password\"\n            [ngModelOptions]=\"{standalone: true}\"\n            class=\"signup-input\"\n          />\n          <button class=\"signup-input\">login</button>\n        </form>\n        \n        <div class=\"sign-up\"  *ngIf=\"!loggedInUser\">\n          <form class=\"signup-wraaper\" (submit)=\"$event.preventDefault();signup()\">\n            <label for=\"\">sign up</label>\n            <input\n              type=\"text\"\n              placeholder=\"username\"\n              [(ngModel)]=\"signUpCredentials.username\"\n              [ngModelOptions]=\"{standalone: true}\"\n              class=\"signup-input\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Your full name\"\n              [(ngModel)]=\"signUpCredentials.fullname\"\n              [ngModelOptions]=\"{standalone: true}\"\n              class=\"signup-input\"\n            />\n            <input\n              type=\"password\"\n              placeholder=\"password\"\n              [(ngModel)]=\"signUpCredentials.password\"\n              [ngModelOptions]=\"{standalone: true}\"\n              class=\"signup-input\"\n            />\n            <button class=\"signup-input\">Signup</button>\n          </form>\n        </div>\n      </main>\n      </section>","import { Component, OnInit } from '@angular/core';\nimport { Item } from 'src/app/models/item';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\nimport { State } from '../../store/store';\nimport {LoadItem, LoadItems} from '../../store/actions/item.actions';\n\n\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  items$: Observable<Item[]>;\n  item$: Observable<Item | null>;\n  constructor(private store: Store<State>) {\n    this.items$ = this.store.select('itemState').pipe(pluck('items'));\n    this.item$ = this.store.select('itemState').pipe(pluck('item'));\n  }\n  ngOnInit(): void {    \n    this.store.dispatch(new LoadItems());\n }\n\n}\n","<section class=\"container\">\n    <p >Number of Items : {{(items$|async)!.length}}!</p>\n    <item-app></item-app>\n</section>","import { Component, Input, OnInit ,\n  EventEmitter,\n  Output,\n  ContentChild,\n  Pipe,\n  PipeTransform,\n  SecurityContext,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  Directive,\n  Optional,} from '@angular/core';\nimport { Item } from 'src/app/models/item';\nimport { ItemListComponent } from '../item-list/item-list.component';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Store } from '@ngrx/store';\nimport { State } from '../../store/store';\nimport { User } from 'src/app/models/item';\nimport { pluck } from 'rxjs/operators';\nimport { Observable, Subscription } from 'rxjs';\n\n@Pipe({ name: 'keepHtml', pure: false })\nexport class EscapeHtmlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  transform(content: any) {\n    return this.sanitizer.sanitize(SecurityContext.HTML, content);\n  }\n}\n\n@Component({\n  selector: 'item-preview',\n  templateUrl: './item-preview.component.html',\n  styleUrls: ['./item-preview.component.scss'],\n})\nexport class ItemPreviewComponent implements OnInit {\n  @Input() item: Item | null = null; //gets from father component : item-list\n  loggedUser$: Observable<User | null>;\n\n  // img = this.item!.img ;\n  img ='https://random.imagecdn.app/500/150 ';\n  strHtml: string = '';\n  constructor(private itemList: ItemListComponent,private store: Store<State>) { \n    this.loggedUser$ = this.store.select('userState').pipe(pluck('user'))!;\n  }\n  ngOnInit(){\n    \n    \n  }\n}\n","<section  class=\"item-preview\">\n  <p>Added by : {{item?.by?.fullname}}</p>\n  <p>{{item?.by?.date | date: 'hh:mm:ss a'}}</p>\n  <h2>{{item?.name}}</h2>\n    <p class=\"text\">\n     {{item?.text}}\n    </p>\n    <!-- <p>Id: {{item?.id}}</p> -->\n    <hr />\n    <img [src]=\"img\">\n    <img [src]=item?.img>\n    <!-- <img src='{{item.img}}' -->\n    <div class=\"text-center\">\n        <ng-content></ng-content>\n    </div>\n \n</section>\n<!-- \n<section>\n    <div class=\"column\">\n        <div class=\"header-d\">`${newItem.itemType}`</div>\n        <div class=\"card-container\">\n          <ng-container class=\"clean-li card\" *ngFor=\"let item of items\">\n            <p class=\"card-text\" *ngIf=\"item.itemType === ${newItem.itemType}\">\n              <span data-id=\"${this._getColumnNumber()}\" (click)=\"transferCard($event, -1, item.name)\"\n                ><</span\n              >\n              {{ item.name} }}\n              <span class=\"addCardBtn\" (click)=\"update(item)\"  \n              >update card </span>\n              <span class=\"addCardBtn\" (click)=\"remove(item)\"  \n              >remove </span>\n            </p>\n            <form class=\"edit-form\" *ngIf=\"showEditForm && item.active && item.itemType ===  ${\n              newItem.itemType\n            }\" >\n              <input itemType=\"text\" [(ngModel)]=\"item.name\" name=\"name\" />\n              <button (click)=\"updateItem(item)\">update</button>\n            </form>\n          </ng-container>\n        </div>\n        <span class=\"addCardBtn\" (click)=\"addCard('others')\">+Add a card</span>\n      </div>`\n</section> -->","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit,Output,EventEmitter } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\n// import {uploadService} from '../../services/upload_Service'\nimport { State } from '../../store/store';\nimport {LoadItem, LoadItems, RemoveItem} from '../../store/actions/item.actions';\nimport { Item } from '../../models/item';\n\n@Component({\n  selector: 'item-app',\n  templateUrl: './item-app.component.html',\n  styleUrls: ['./item-app.component.scss'],\n  // providers:[uploadService]\n})\nexport class ItemAppComponent implements OnInit {\n  // @Output() uploadedData = new EventEmitter<[]>();\n  items$: Observable<Item[]>;\n  item$: Observable<Item | null>;\n  isLoading$: Observable<boolean>;\n  error$: Observable<string>;\n  addingNew = false;\n  files: File[] = [];\n  uploadedItems:any=[];\n  filterBy: string = '';\n\n    //connecting to store and getting specific properties\n  //pluck : take a property of object\n  // constructor(private store: Store<State> ,private _uploadService:uploadService) {\n    constructor(private store: Store<State>) {\n    this.items$ = this.store.select('itemState').pipe(pluck('items'));\n    this.item$ = this.store.select('itemState').pipe(pluck('item'));\n    this.isLoading$ = this.store.select('itemState').pipe(pluck('isLoading'));\n    this.error$ = this.store.select('itemState').pipe(pluck('error'));\n  }\n\n  ngOnInit(): void {\n    this.store.dispatch(new LoadItems(this.filterBy));\n  }\n  removeItem(itemId :string) {\n    this.store.dispatch(new RemoveItem(itemId));\n  }\n  editItem(itemId :string) {\n    this.store.dispatch(new LoadItem(itemId));\n  }  \n//   onSelect(event:any) {\n//     console.log(event);\n//     this.files.push(...event.addedFiles);\n//   }\n  \n//   onRemove(event:any) {\n//     console.log(event);\n//     this.files.splice(this.files.indexOf(event), 1);\n//   }\n//   onUpload(){\n//     if(!this.files[0]){\n//       alert('upload some files first ')\n//     }\n//     const file_data = this.files[0];\n// const data = new FormData();\n// data.append('file',file_data);\n// data.append('upload_preset','wtjy3eil');\n// data.append('cloud_name','dg6yaccvn');\n// this._uploadService.uploadImage(data).subscribe((response:any)=>{\n//   if(response) console.log(response);\n//   this.uploadedItems.push(response.secure_url);\n//   // this.uploadedData.emit(this.uploadedItems)\n// })\n//   }\n}\n\n\n","<main class=\"item-app-container\">\n  <div class=\"error-msg\" *ngIf=\"error$ | async\">{{ error$ | async }}</div>\n  <p *ngIf=\"isLoading$ | async\">⏱ Loading...</p>\n  <button (click)=\"addingNew = !addingNew\">Add Item...</button>\n  <!-- <ngx-dropzone (change)=\"onSelect($event)\">\n    <ngx-dropzone-label>Drop it, baby!</ngx-dropzone-label>\n    <ngx-dropzone-image-preview\n      ngProjectAs=\"ngx-dropzone-preview\"\n      *ngFor=\"let f of files\"\n      [file]=\"f\"\n      [removable]=\"true\"\n      (removed)=\"onRemove(f)\"\n    >\n      <ngx-dropzone-video-preview\n        ngProjectAs=\"ngx-dropzone-preview\"\n        *ngFor=\"let f of files\"\n        [file]=\"f\"\n        [removable]=\"true\"\n        (removed)=\"onRemove(f)\"\n      >\n        <ngx-dropzone-label> ({{ f.type }})</ngx-dropzone-label>\n      </ngx-dropzone-video-preview>\n      <ngx-dropzone-label> ({{ f.type }})</ngx-dropzone-label>\n    </ngx-dropzone-image-preview>\n  </ngx-dropzone> -->\n  <!-- <div>\n    <button (click)=\"onUpload()\">upload</button>\n  </div> -->\n  <item-list\n    (removed)=\"removeItem($event)\"\n    (edited)=\"editItem($event)\"\n    [items]=\"items$ | async\"\n    [uploadedData]=\"uploadedItems\"\n  ></item-list>\n  <!-- <user-setting\n  [items]=\"items$ | async\"\n  [uploadedData]=\"uploadedItems\"\n  > -->\n  <!-- </user-setting> -->\n  <section *ngIf=\"addingNew || (item$ | async)\">\n    <item-edit (saved)=\"addingNew = false\"></item-edit>\n  </section>\n</main>\n\n<!-- async take care of unsubscribe   -->\n<!-- async is register to this pipe and when data passed , its inters to the props\n    in this case - items . item list component will use this data-->\n","import { ItemListComponent } from '../item-list/item-list.component';\nimport { Component, OnInit,Output,EventEmitter ,Input} from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\n// import {uploadService} from '../../services/upload_Service'\nimport { State } from '../../store/store';\nimport {LoadItem, LoadItems, RemoveItem} from '../../store/actions/item.actions';\nimport { Item } from '../../models/item';\nimport { User } from 'src/app/models/item';\n@Component({\n  selector: 'user-setting',\n  templateUrl: './user-setting.component.html',\n  styleUrls: ['./user-setting.component.scss']\n})\nexport class UserSettingComponent implements OnInit {\n  // @Input() items: Item[] | null = [];\n  // @Input() item: Item | null = null;\n  // @Input() uploadedData:[]=[];\n  loggedUser$: Observable<User | null|undefined>;\n  filterBy: string = '';\n  items$: Observable<Item[]>;\n  items:Item[]=[];\n  loggedUser:User={\n    username: \"\",\n    password: \"\",\n    fullname: \"\",\n    isAdmin: false,\n  } ;\n  // userPost:Boolean= this.loggedUser.fullname===this?item?.by?.fullname;\n  img ='https://random.imagecdn.app/500/150 ';\n  constructor(private store: Store<State>) {\n    this.items$ = this.store.select('itemState').pipe(pluck('items'));\n    this.items$.subscribe((user:any)=>{\n      this.items=user\n    })\n    this.loggedUser$ = this.store.select('userState').pipe(pluck('loggedUser'))!;\n   }\n\n  ngOnInit(): void {\n    this.store.dispatch(new LoadItems(this.filterBy));\n    this.loggedUser$.subscribe((user:any)=>{\n      this.loggedUser=user\n    })\n  }\n\n}\n","<p>setting</p>\n\n<!-- <ul *ngFor=\"let item of items\">\n  <li>{{item?.by?.fullname}}</li>\n</ul> -->\n\n<main *ngFor=\"let item of items\" >\n  <section  *ngIf=\"loggedUser$ | async\" >\n<section *ngIf=\"loggedUser.fullname===item?.by?.fullname\"  class=\"item-preview\">\n  <p>Added by : {{item?.by?.fullname}}</p>\n  <p>{{item?.by?.date | date: 'hh:mm:ss a'}}</p>\n  <h2>{{item?.name}}</h2>\n    <p class=\"text\">\n     {{item?.text}}\n    </p>\n    <!-- <p>Id: {{item?.id}}</p> -->\n    <hr />\n    <img [src]=\"img\">\n    <img [src]=item?.img>\n    </section>\n  </section>\n  </main>","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { from, of } from 'rxjs';\nimport { map, catchError, switchMap, tap } from 'rxjs/operators';\nimport { ItemService } from '../services/item.service';\nimport { UserService } from '../services/user.service';\nimport {\n  ItemAction,\n  SAVE_ITEM,\n  ADDED_ITEM,\n  UPDATED_ITEM,\n  LOAD_ITEMS,\n  LOADED_ITEMS,\n  REMOVE_ITEM,\n  REMOVED_ITEM,\n  LOAD_ITEM,\n  LOADED_ITEM,\n  SET_ERROR,\n} from './actions/item.actions';\nimport {\n  UserAction,\n  ADDED_USER,\n  SAVE_USER,\n  UPDATED_USER,\n  LOADED_USER,\n  REMOVED_USER,\n  LOAD_USER,\n  GET_LOGGED_USER,\n  LOADED_LOGGED_USER,\n  LOGIN\n} from './actions/user.actions'\n// the actual response to the component dispatch as vue actions\n@Injectable()\nexport class AppEffects {\n  loadItems$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(LOAD_ITEMS),\n      switchMap(\n        (\n          action //a kind of filter : only wants data in pipe regarding loading items\n        ) =>\n          this.itemService.realQuery().pipe(\n            map((items) => ({\n              // this is the finale data on loadItems$ observable pipe , that will go back to reducer that will update the store\n              type: LOADED_ITEMS,\n              items,\n            })),\n            catchError((error) => {\n              console.log('Effect: Caught error ===> Reducer', error);\n              return of({\n                type: SET_ERROR,\n                error: error.toString(),\n              });\n            })\n          )\n      )\n    );\n  });\n  loadItem$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(LOAD_ITEM),\n      tap(() => console.log('Effects: load item ==> service')),\n      switchMap((action) =>\n        this.itemService.getById(action.itemId, action.itemId).pipe(\n          tap(() => console.log('Effects: Got item from service ===> Reducer')),\n          map((item) => ({\n            type: LOADED_ITEM,\n            item,\n          })),\n          catchError((error) => {\n            console.log('Effect: Caught error ===> Reducer', error);\n            return of({\n              type: SET_ERROR,\n              error: error.toString(),\n            });\n          })\n        )\n      )\n    );\n  });\n  removeItem$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(REMOVE_ITEM),\n      switchMap((action) =>\n        this.itemService.remove(action.itemId, action.itemId).pipe(\n          tap(() =>\n            console.log('Effects: Item removed by service ===> Reducer')\n          ),\n          map(() => ({\n            type: REMOVED_ITEM,\n            itemId: action.itemId,\n          })),\n          catchError((error) => {\n            console.log('Effect: Caught error ===> Reducer', error);\n            return of({\n              type: SET_ERROR,\n              error: error.toString(),\n            });\n          })\n        )\n      )\n    );\n  });\n  saveItem$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(SAVE_ITEM),\n      switchMap((action) =>\n        this.itemService.save(action.item).pipe(\n          tap(() =>\n            console.log(\n              'Effects: Item saved by service, inform the ===> Reducer'\n            )\n          ),\n          map((savedItem) => ({\n            type: action.item.id ? UPDATED_ITEM : ADDED_ITEM,\n            item: savedItem,\n          })),\n          catchError((error) => {\n            console.log('Effect: Caught error ===> Reducer', error);\n            return of({\n              type: SET_ERROR,\n              error: error.toString(),\n            });\n          })\n        )\n      )\n    );\n  });\n\n  //ה-ACTIN עצמו הוא צינור שהאפקט מאזין לו . \n  // ככה שכל פעם שנזרק דיסאפצ , כלומר שנורה action\n  // ה-אפקט יוכ להאזין לו ולהגיב בהתאם\n  // הזיהוי נעשה באמצעות האופרטור של typeOf\n\n\n  saveUser$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(SAVE_USER),\n      switchMap((action) =>\n      this.userService.signup(action).pipe(\n          tap(() =>\n            console.log(\n              'user signed',action.user\n            )\n          ),\n          map(() => ({\n            type: action.user.fullname ? UPDATED_USER : ADDED_USER,\n            // type: ADDED_USER,\n            user: action.user\n          })),\n          catchError((error) => {\n            console.log('Effect: Caught error ===> Reducer', error);\n            return of({\n              type: SET_ERROR,\n              error: error.toString(),\n            });\n          })\n        )\n      )\n    );\n  });\n\n  getLoggedUser$= createEffect(() => {\n    return this.actions$.pipe(\n      ofType(GET_LOGGED_USER),\n      tap(() => console.log('Effects: load user ==> service')),\n      switchMap(() =>\n        this.userService.getLoggedInUser().pipe(\n          tap(() => console.log('Effects: Got logged user from service ===> Reducer')),\n          map((user) => ({\n            type: LOADED_LOGGED_USER,\n            user,\n          })),\n          catchError((error) => {\n            console.log('Effect: Caught error ===> Reducer', error);\n            return of({\n              type: SET_ERROR,\n              error: error.toString(),\n            });\n          })\n        )\n      )\n    );\n  });\n\n  login$= createEffect(() => {\n    return this.actions$.pipe(\n      ofType(LOGIN),\n      tap(() => console.log('Effects: load user ==> service')),\n      switchMap((action) =>\n        from(this.userService.login(action)).pipe(\n          tap(() => console.log('Effects: Got login user from service ===> Reducer',action)),\n          map((user) => ({\n            type: LOADED_LOGGED_USER,\n            user:action.user,   \n          })),\n          catchError((error) => {\n            console.log('Effect: Caught error ===> Reducer', error);\n            return of({\n              type: SET_ERROR,\n              error: error.toString(),\n            });\n          })\n        )\n      )\n    );\n  });\n\n  // updateUser$ = createEffect(() => {\n  //   return this.actions$.pipe(\n  //     ofType(UPDATED_USER),\n  //     switchMap((action) =>\n  //     this.userService.update(action).pipe(\n  //         tap(() =>\n  //           console.log(\n  //             'user signed',action\n  //           )\n  //         ),\n  //         catchError((error) => {\n  //           console.log('Effect: Caught error ===> Reducer', error);\n  //           return of({\n  //             type: SET_ERROR,\n  //             error: error.toString(),\n  //           });\n  //         })\n  //       )\n  //     )\n  //   );\n  // });\n  constructor(\n    private actions$: Actions<ItemAction|UserAction>,\n    private itemService: ItemService,\n    private userService: UserService\n  ) {}\n}\n","import { ActionReducerMap, MetaReducer } from '@ngrx/store';\nimport * as itemModule from './reducers/item.reducer';\nimport * as userModule from './reducers/user.reducer';\n\nimport { environment } from '../../environments/environment';\n\nexport interface State {\n  itemState: itemModule.ItemState;\n  userState: userModule.UserState;\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  itemState: itemModule.reducer,\n  userState: userModule.reducer,\n};\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production\n  ? []\n  : [];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n            <app-header></app-header>\n            <router-outlet></router-outlet>\n            `,\n})\nexport class AppComponent {\n  title = 'Coding Academy NGRX Demo';\n}\n","\r\nexport const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n    makeId\r\n}\r\nimport {  User } from 'src/app/models/item';\r\n//possible id\r\ninterface Entity {\r\n  name?: string;\r\n  text?:string;\r\n  itemType?: string;\r\n  color?:string;\r\n  importance?:string;\r\n  img?:string;\r\n  video?:string;\r\n  username?: string,\r\n  password?:any,\r\n  fullname?: string,\r\n  isAdmin?: boolean,\r\n  id?:any\r\n}\r\n\r\nasync function query(entityType: string, delay = 1000): Promise<Entity[]> {\r\n    var entities = JSON.parse(localStorage.getItem(entityType) || 'null') || []\r\n    if (delay) {\r\n        return new Promise((resolve)=>setTimeout(resolve, delay, entities))\r\n    }  \r\n    return entities\r\n}\r\n\r\nasync function get(entityType: string, entityId: string): Promise<Entity> {\r\n    // console.log(entityId);\r\n    const entities = await query(entityType)\r\n    const entity = entities.find(entity => entity.id === entityId)\r\n    if (!entity) throw new Error(`Cannot get, Item ${entityId} of type: ${entityType} does not exist`)\r\n    return entity;\r\n}\r\n\r\nasync function post(entityType: string, newEntity: Entity): Promise<Entity> {\r\n    newEntity = {...newEntity, id: makeId()}\r\n    const entities = await query(entityType)\r\n    entities.push(newEntity)\r\n    _save(entityType, entities)\r\n    return newEntity\r\n}\r\n\r\nasync function put(entityType: string, updatedEntity : Entity): Promise<Entity> {\r\n    const entities = await query(entityType)\r\n    const idx = entities.findIndex(entity => entity.id === updatedEntity.id)\r\n    entities[idx] = updatedEntity\r\n    _save(entityType, entities)\r\n    return updatedEntity\r\n}\r\n\r\nasync function remove(entityType: string, entityId: string) : Promise<boolean> {\r\n    const entities = await query(entityType)\r\n    const idx = entities.findIndex(entity => entity.id === entityId)\r\n    if (idx !== -1)  entities.splice(idx, 1)\r\n    else throw new Error(`Cannot remove, item ${entityId} of type: ${entityType} does not exist`)\r\n    _save(entityType, entities)\r\n    return true;\r\n}\r\n\r\n\r\nfunction _save(entityType: string, entities : Entity[]) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}","import { Component, Input, OnInit, Output } from '@angular/core';\nimport {EventEmitter} from '@angular/core';\nimport { ItemService } from 'src/app/services/item.service';\nimport { Item } from 'src/app/models/item';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Store } from '@ngrx/store';\nimport { State } from '../../store/store';\nimport { User } from 'src/app/models/item';\nimport { pluck } from 'rxjs/operators';\nimport { Observable, Subscription } from 'rxjs';\nimport { CommonModule } from '@angular/common';  \nimport { BrowserModule } from '@angular/platform-browser';\n\n@Component({\n  selector: 'item-list',\n  templateUrl: './item-list.component.html',\n  styleUrls: ['./item-list.component.scss'],\n})\nexport class ItemListComponent implements OnInit {\n  @Input() items: Item[] | null = [];\n  @Input() uploadedData:[]=[];\n  @Output() removed = new EventEmitter<string>()\n  @Output() edited = new EventEmitter<string>()\n  loggedUser$: Observable<User | null>;\n  loggedUser:User={\n    username: \"\",\n    password: \"\",\n    fullname: \"\",\n    isAdmin: false,\n  } ;\n  // type:Array<string> = this.items!.map((el:string)=>el.itemType)\n  constructor(private store: Store<State>) {\n    this.loggedUser$ = this.store.select('userState').pipe(pluck('user'))!;\n  }\n\n  ngOnInit() {\n    this.loggedUser$.subscribe((user:any)=>{\n      this.loggedUser=user\n    })\n  }\n  removeItem(itemId: string) {\n    this.removed.emit(itemId)\n  }\n  editItem(itemId: string) {\n    this.edited.emit(itemId)\n  }\n}\n","<section class=\"card-grid main-layout\">\n  <item-preview *ngFor=\"let item of items\" [item]=\"item\">\n    <section>\n      {{ uploadedData }}\n      <!-- *ngIf =\"loggedUser.fullname===item?.by?.fullname\"   -->\n      <!-- <p>{{(loggedUser$ |async)!.fullname}}</p> -->\n      <div *ngIf=\"loggedUser$ | async\" >\n        <span *ngIf=\"loggedUser\" >\n        <button  *ngIf =\"loggedUser.fullname===item?.by?.fullname\" (click)=\"removeItem(item.id!)\">x</button>\n        <button *ngIf =\"loggedUser.fullname===item?.by?.fullname\" (click)=\"editItem(item.id!)\">Edit</button>\n      </span>\n      </div>\n    </section>\n  </item-preview>\n  <!-- <user-setting *ngFor=\"let item of items\" [item]=\"item\">\n    <section>\n      {{ uploadedData }}\n    </section>\n  </user-setting> -->\n</section>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport {uploadService} from '../../services/upload_Service'\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\nimport { Item } from '../../models/item';\nimport { SaveItem } from '../../store/actions/item.actions';\nimport { UpdatedUser,SaveUser } from 'src/app/store/actions/user.actions';\nimport { State } from '../../store/store';\nimport { User } from 'src/app/models/item';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'item-edit',\n  templateUrl: './item-edit.component.html',\n  styleUrls: ['./item-edit.component.scss'],\n  providers:[uploadService]\n})\n\n\n\nexport class ItemEditComponent implements OnInit {\n  loggedUser$: Observable<User | null|undefined>;\n  loggedUser:User={\n    username: \"\",\n    password: \"\",\n    fullname: \"\",\n    isAdmin: false,\n  } ;\n  item$: Observable<Item | null>;\n  item:Item = { id: '', name: '',text:'',img:'',video:'',by:{fullname:'',date:Date.now()} }\n  modalOpen:Boolean  =true;\n  @Output() saved = new EventEmitter();\n  sub: Subscription | null = null;\n  files: File[] = [];\n  uploadedItems:any=[];\n\n  constructor(private store: Store<State>,private _uploadService:uploadService) {\n    this.item$ = this.store.select('itemState').pipe(pluck('item'));\n    this.loggedUser$ = this.store.select('userState').pipe(pluck('loggedUser'))!;\n\n  }\n  closeModal(){\nthis.modalOpen = false\n\n  }\n  get itemEditState() {\n    return (this.item.id)? 'Update' : 'Add'\n  }\n\n  ngOnInit(): void {\n    this.sub = this.item$.subscribe(item => {\n      if (item) this.item = JSON.parse(JSON.stringify(item))\n\n    })\n\n  }\n saveItem() {\nthis.store.dispatch(new SaveItem(this.item));\nthis.saved.emit();\n\nthis.loggedUser$.subscribe((user:any)=>{\n  this.loggedUser=user\n})\nthis.loggedUser.items?.push(this.item);\nthis.store.dispatch(new UpdatedUser(this.loggedUser));\n// this.store.dispatch(new SaveUser(Object.assign(this.item)));\n  }\n  ngOnDestroy() {\n    this.sub?.unsubscribe()\n  }\n  onSelect(event:any) {\n    console.log(event);\n    this.files.push(...event.addedFiles);\n  }\n  \n  onRemove(event:any) {\n    console.log(event);\n    this.files.splice(this.files.indexOf(event), 1);\n  }\n  onUpload(){\n    if(!this.files[0]){\n      // alert('upload some files first ')ף\n      this.loggedUser$.subscribe((user:any)=>{\n        this.loggedUser=user\n      })\n      this.loggedUser.items?.push(this.item);\n      \n      this.item.by!.fullname=this.loggedUser.fullname;\n      this.store.dispatch(new SaveItem(this.item));\n  this.saved.emit();\n\n  return\n    }\n    const file_data = this.files[0];\nconst data = new FormData();\ndata.append('file',file_data);\ndata.append('upload_preset','wtjy3eil');\ndata.append('cloud_name','dg6yaccvn');\nthis._uploadService.uploadImage(data).subscribe((response:any)=>{\n  if(response) console.log(response);\n  this.uploadedItems.push(response.secure_url);\n  this.item.img = this.uploadedItems[0];\n \n  this.loggedUser$.subscribe((user:any)=>{\n    this.loggedUser=user\n  })\n  this.loggedUser.items?.push(this.item);\n  this.item.by!.fullname=this.loggedUser.fullname;\n\nthis.item.by!.date=Date.now();\n  this.store.dispatch(new UpdatedUser(this.loggedUser));\n\n\n  this.store.dispatch(new SaveItem(this.item));\n  this.saved.emit();\n})\n\n  }\n  \n}\n","<section *ngIf=\"(loggedUser$|async)\" [hidden]=\"!modalOpen\" class=\"item-edit modalWrapper\">\n  \n  <main   class=\"main-display\" >\n    <button class=\"close-modal-btn\" (click)=\"closeModal()\">❌</button>\n      <h2 class=\"centered-text\">{{itemEditState}} your post </h2>\n    <form class=\"form-container\" (submit)=\"$event.preventDefault()\">\n     \n        <!-- <input type=\"text\" name=\"name\" [(ngModel)]=\"item.name\" placeholder=\"Item name\" /> -->\n        <input class=\"form-text\" type=\"text\" name=\"name\" [(ngModel)]=\"item.text\" placeholder=\"What's on your mind\" />\n        <!-- <button>{{itemEditState}}</button> -->\n    </form>\n    <ngx-dropzone class=\"upload-container\" (change)=\"onSelect($event)\">\n        <ngx-dropzone-label>Drop it, baby!</ngx-dropzone-label>\n        <ngx-dropzone-image-preview\n          ngProjectAs=\"ngx-dropzone-preview\"\n          *ngFor=\"let f of files\"\n          [file]=\"f\"\n          [removable]=\"true\"\n          (removed)=\"onRemove(f)\"\n        >\n          <ngx-dropzone-video-preview\n            ngProjectAs=\"ngx-dropzone-preview\"\n            *ngFor=\"let f of files\"\n            [file]=\"f\"\n            [removable]=\"true\"\n            (removed)=\"onRemove(f)\"\n          >\n            <ngx-dropzone-label> ({{ f.type }})</ngx-dropzone-label>\n          </ngx-dropzone-video-preview>\n          <ngx-dropzone-label> ({{ f.type }})</ngx-dropzone-label>\n        </ngx-dropzone-image-preview>\n      </ngx-dropzone>\n      <!-- <pre>{{item | json}}</pre> -->\n      <button class=\"upload-btn\" (click)=\"onUpload()\">Add post</button>\n    </main>\n</section>\n<section *ngIf=\"!(loggedUser$|async)\">\n  <div class=\"modalWrapper\">\n    <main class=\"main-display\" >\n      <button class=\"close-modal-btn\" (click)=\"closeModal()\">❌</button>\n      <p>Sorry! you have to sign-up to add posts</p>\n      <p>you can sign-up easily  <a routerLink=\"/login\"\n        routerLinkActive=\"active-nav\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n        > here</a></p>\n    \n</main>\n  </div>\n</section>","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { reducers, metaReducers } from './store/store';\nimport { AppEffects } from './store/app.effects';\n\nimport { AppComponent } from './root-component/index';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ItemAppComponent } from './pages/item-app/item-app.component';\n\nimport { AppHeaderComponent } from './cmps/app-header/app-header.component';\nimport { ItemListComponent } from './cmps/item-list/item-list.component';\nimport { ItemPreviewComponent } from './cmps/item-preview/item-preview.component';\nimport { ItemEditComponent } from './cmps/item-edit/item-edit.component';\nimport { LoginComponent } from './cmps/login/login.component';\nimport { UserSettingComponent } from './cmps/user-setting/user-setting.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AppHeaderComponent,\n    ItemAppComponent,\n    ItemEditComponent,\n    ItemListComponent,\n    ItemPreviewComponent,\n    LoginComponent,\n    UserSettingComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    NgxDropzoneModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    StoreModule.forRoot(reducers, {\n      metaReducers,\n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: true,\n      },\n    }),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n    EffectsModule.forRoot([AppEffects]),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { SET_LOADING, LOADED_ITEMS, REMOVED_ITEM, ADDED_ITEM, UPDATED_ITEM, LOADED_ITEM, SET_ERROR } from '../actions/item.actions';\n// import this vars from actions enable us to determent which change is needed on state.\nimport { Item, User } from 'src/app/models/item';\n\n// Creates a reducer function to handle state transitions.\n// Reducer creators reduce the explicitness of reducer functions with switch statements.\n\n// as mutations in vue(?)\n//pluck from action aim here\n// our state composed of : items,item,isLoading,error\n\nexport interface ItemState {\n  items: Item[];\n  item: Item | null;\n  isLoading: boolean;\n  error: string;\n}\n\nconst initialState: ItemState = {\n  items: [],\n  item: null,\n  isLoading: false,\n  error: ''\n};\n\n//this function will take care to return new state\nexport function reducer(state: ItemState = initialState, action: any): ItemState {\n  switch (action.type) {\n    case SET_LOADING: {\n      //destructure from the state object , return new state by spreading the currant state\n      // the actual change of the state by the reducer will take place depending on the action.type the is determend bu \n      //the action : the first chain on the state management . the reducer is the second one.\n      //documentation: State changes are handled by pure functions called reducers that take the current state and the latest action to compute a new state\n      // every change create a new state which allow angular to keep track on tree of changes :\n      // some props have not changes during the state creation : so we have anew and old state and we can keep on the changes\n      // similar to virtual dom on react ?\n      //store is an observable that we can subscribe to it.\n      const { isLoading } = action;\n      console.log(`Reducer: Setting isLoading to ${isLoading}`);\n      //the spread operator responsible for returned a new state (we cant change existing one).\n      // maybe i can also try with object.assign\n      return { ...state, isLoading, error: '' };\n    } case SET_ERROR: {\n      const { error } = action;\n      console.log(`Reducer: Setting item error`, error);\n      return { ...state, error, isLoading: false };\n    } case LOADED_ITEMS: {\n      console.log(action); // return from app.effects - return type+array from observable of query\n      const { items } = action; // return from app.effects - return type+array from observable of query\n      console.log(`Reducer: Setting loaded items (${items.length}) items`);\n      return { ...state, items, isLoading: false, error: '' };\n    } case LOADED_ITEM: {\n      const { item } = action;\n      console.log(`Reducer: Setting loaded item ${item.id}`);\n      return { ...state, item, error: '' };\n    } case REMOVED_ITEM: {\n      const { itemId } = action;\n      console.log('Reducer: Removing item:', itemId);\n      const items = state.items.filter(item => item.id !== itemId)\n      return { ...state, items, error: '' };\n    } case ADDED_ITEM: {\n      const { item } = action;\n      console.log('Reducer: Adding item:', item);\n      const items = [...state.items, item]\n      return { ...state, items, error: '' };\n    } case UPDATED_ITEM: {\n      const { item } = action;\n      console.log('Reducer: Updating item:', item);\n      const items = state.items.map(currItem => (currItem.id === item.id) ? item : currItem)\n      return { ...state, items, item: null, error: '' };\n    } default:\n      return state;\n  }\n}\n","import {Injectable} from'@angular/core';\r\nimport {HttpClient,HttpHeaders} from '@angular/common/http'\r\nimport {Observable} from 'rxjs'\r\n\r\n@Injectable()\r\nexport class uploadService {\r\n\r\n    constructor(private _http:HttpClient){}\r\n    uploadImage(vals:any):Observable<any>{\r\nlet data = vals ;\r\n\r\n\r\nreturn this._http.post(\r\n    'https://api.cloudinary.com/v1_1/dg6yaccvn/image/upload',\r\n    data\r\n)\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, from, of } from 'rxjs';\nimport { Item ,rawItem} from '../models/item';\nimport { LoadingItems } from '../store/actions/item.actions';\nimport { ItemState } from '../store/reducers/item.reducer';\n\nimport { storageService } from './async-storage.service';\n\nconst ENTITY = 'item';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ItemService {\n  items:Item[]=[];\n  constructor(private store: Store<ItemState>, private https: HttpClient) {\n    // If empty - load test data to storage\n    // const items = JSON.parse(localStorage.getItem(ENTITY) || 'null');\n    this.items = JSON.parse(localStorage.getItem(ENTITY) || 'null');\n    // if (!items || items.length === 0) {\n    //   console.log('Empty');\n    //   localStorage.setItem(ENTITY, JSON.stringify(this.createItems()));\n    // }\n  }\n  query(filterBy = ''): Observable<Item[]> {\n    this.store.dispatch(new LoadingItems());\n    // casting : the promise entity [] to item as define on module. form can change promise to Observable\n    //only if we first cast it as promise of item\n\n    return from(storageService.query(ENTITY) as Promise<Item[]>);\n  }\n  realQuery(): Observable<Item[]> {\n    let realItem = this.https.get(\n      'https://retoolapi.dev/NLfiGD/data'\n      // \"https://philosophyapi.herokuapp.com/api/books/\"\n    );\n    let data = realItem.subscribe(res=>{\n      // const items = JSON.parse(localStorage.getItem(ENTITY) || 'null');\n      if (!this.items || this.items.length === 0) {\n        if(res===undefined) JSON.parse(localStorage.getItem(ENTITY) || 'null');\n        else{return localStorage.setItem(ENTITY,JSON.stringify(res))}\n      }\n        else{\n          return this.items \n        }\n        //a bad way to keep data to edit data fro server. edit should check if to \n        //edit from store array ! \n      })\n      // const items = JSON.parse(localStorage.getItem(ENTITY) || 'null');\n    return of(this.items)\n  }\n\n  getById(itemId: string , id:string): Observable<Item> {\n    id = itemId;\n    return from(storageService.get(ENTITY, id) as Promise<Item>);\n  }\n  remove(itemId: string, id:string): Observable<boolean> {\n    id = itemId;\n    return from(storageService.remove(ENTITY, id));\n  }\n\n  save(item: Item): Observable<Item> {\n    const method = item.id ? 'put' : 'post';\n    const prmSavedItem = storageService[method](ENTITY, item);\n    return from(prmSavedItem) as Observable<Item>;\n  }\n\n  private createItems(): Item[] {\n    return ['Vue', 'Angular', 'React', 'Redux', 'NGRX', 'Vuex'].map((name) => ({\n      id: storageService.makeId(),\n      name,\n    }));\n  }\n  get emptyItem(): Item {\n    return {\n      id: '',\n      name: '',\n    };\n  }\n  getRawData(): any {\n    let data:any = [\n      {\n      \"Home-Work\" : [\n        {\n          \"id\": 8,\n          \"name\": \"Angular practice\",\n          \"color\": \"#e8741e\",\n          \"importance\": 3\n          },\n          {\n          \"id\": 9,\n          \"name\": \"vue practice\",\n          \"color\": \"#344759\",\n          \"importance\": 4\n          },\n          {\n          \"id\": 10,\n          \"name\": \"react practice\",\n          \"color\": \"#8e6e95\",\n          \"importance\": 5\n          },\n      ]\n    },\n      { \"Finance\":[\n        {\n          \"id\": 1,\n               \"name\": \"take loan\",\n               \"color\": \"#39a59c\",\n               \"importance\": 4\n               },\n          {\n               \"id\": 3,\n               \"name\": \"go to the bank\",\n               \"color\": \"#39a59c\",\n               \"importance\": 1\n               },\n               {\n                \"id\": 5,\n                \"name\": \"buy shares\",\n                \"color\": \"#e8741e\",\n                \"importance\": 2\n                },\n      ]},\n      {\n     \"others\" :[\n      {\n        \"id\": 2,\n        \"name\": \"clean car\",\n        \"color\": \"#39a59c\",\n        \"importance\": 1\n        },\n        {\n        \"id\": 12,\n        \"name\": \"go to the bank\",\n        \"color\": \"#e8741e\",\n        \"importance\": 2\n        },\n       {\"Shopping-list\":[\n        {\n          \"id\": 4,\n          \"name\": \"buy cheese\",\n          \"color\": \"#344759\",\n          \"importance\": 4\n          },\n       ]}\n     ]\n    \n    }\n     ,\n      ]\n      return data\n  }\n}\n","import { createAction, props } from '@ngrx/store';\r\n// import { SignUpCredentials } from 'src/app/login/login.component'; \r\nimport { Action } from '@ngrx/store';\r\n//Actions express unique events that happen throughout your application\r\nimport { Item, User } from 'src/app/models/item';\r\n\r\nexport const ADDED_USER = '[user] added';\r\nexport const SAVE_USER = '[user] saved';\r\nexport const UPDATED_USER = '[user] updated';\r\nexport const LOADED_USER = '[user] loaded';\r\nexport const REMOVED_USER = '[user] removed';\r\nexport const LOAD_USERS = '[user]s load';\r\nexport const LOAD_USER = '[user] load';\r\nexport const LOADED_USERS = '[user]s loaded';\r\nexport const REMOVE_USER = '[user] remove';\r\nexport const SET_ERROR = '[user] error';\r\nexport const SET_LOADING = '[user] loading';\r\nexport const GET_LOGGED_USER = '[user] get logged ';\r\nexport const LOADED_LOGGED_USER = '[user] logged loaded ';\r\nexport const LOGIN = '[user] login';\r\n\r\n\r\nexport type UserAction = LoadUsers | LoadUser | RemoveUser | SaveUser | GetLoggedUser |Login\r\n\r\nexport class Login implements Action {\r\n  readonly type = LOGIN;\r\n  constructor(public user:User) {}\r\n}\r\n\r\nexport class GetLoggedUser implements Action {\r\n  readonly type = GET_LOGGED_USER;\r\n  constructor() {}\r\n}\r\nexport class LoadedLoggedUser implements Action {\r\n  readonly type = LOADED_LOGGED_USER;\r\n  constructor(public user:User) {}\r\n}\r\n\r\nexport class AddedUser implements Action {\r\n    readonly type = ADDED_USER;\r\n    constructor(public user: User) {}\r\n  }\r\n  export class SaveUser implements Action {\r\n    readonly type = SAVE_USER;\r\n    constructor(public user: User) {}\r\n  }\r\n  export class RemoveUser implements Action {\r\n    readonly type = REMOVED_USER;\r\n    constructor(public user: User) {}\r\n  }\r\n  export class UpdatedUser implements Action {\r\n    readonly type = UPDATED_USER;\r\n    constructor(public user: User) {}\r\n  }\r\n  export class LoadedUser implements Action {\r\n    readonly type = LOADED_USER;\r\n    constructor(public user:User) {}\r\n  }\r\n  \r\n  export class LoadUsers implements Action {\r\n    readonly type = LOAD_USERS;\r\n    constructor(public user:User) {}\r\n  }\r\n  \r\n  export class LoadUser implements Action {\r\n    readonly type = LOAD_USER;\r\n    constructor(public user:User) {}\r\n  }\r\n  \r\n  export class LoadedUsers implements Action {\r\n    readonly type = LOADED_USERS;\r\n    constructor(public user:User) {}\r\n  }\r\n  \r\n  export class RemovedUser implements Action {\r\n    readonly type = REMOVED_USER;\r\n    constructor(public user:User) {}\r\n  }\r\n  export class UserError implements Action {\r\n    readonly type = SET_ERROR;\r\n    constructor(public error: string) {}\r\n  }\r\n  export class LoadingUsers implements Action {\r\n    readonly type = SET_LOADING;\r\n    constructor(public isLoading: boolean = true) {}\r\n  }\r\n\r\n// export const signUp = createAction('[user] SignUp', props<{ signUpCredentials:any }>());\r\n// export const login = createAction('[user] Login');\r\n// export const logOut = createAction('[user] LogOut');","// import { createReducer, on } from '@ngrx/store';\r\n// import { login, signUp, logOut } from '../actions/user.actions';\r\n// import { UserService } from 'src/app/services/user.service';\r\n// import { User } from 'src/app/models/item';\r\n \r\n// export interface userState {\r\n//    users: User[];\r\n//    user: User | null;\r\n//     isLoading: boolean;\r\n//     error: string;\r\n//   }\r\n\r\n// export const initialState = {\r\n//     loggedUser : UserService.getLoggedUser(),\r\n//     users: [],\r\n// };\r\n \r\n// const _counterReducer = createReducer(\r\n//   initialState,\r\n//   on(login, (state) => state),\r\n//   on(signUp, (state) => state),\r\n//   on(logOut, (state) => state)\r\n// );\r\n \r\n// export function counterReducer(state:any, action:any) {\r\n//   return _counterReducer(state, action);\r\n// }\r\n\r\n\r\n\r\nimport { SET_LOADING, LOADED_USERS, REMOVED_USER, ADDED_USER, UPDATED_USER, LOADED_USER, SET_ERROR,LOADED_LOGGED_USER } from '../actions/user.actions';\r\nimport { from, of } from 'rxjs';\r\nimport { UserService  } from 'src/app/services/user.service';\r\n// import this vars from actions enable us to determent which change is needed on state.\r\nimport { User} from 'src/app/models/item';\r\n\r\n// Creates a reducer function to handle state transitions.\r\n// Reducer creators reduce the explicitness of reducer functions with switch statements.\r\n\r\n// as mutations in vue(?)\r\n//pluck from action aim here\r\n// our state composed of : users,user,isLoading,error\r\n\r\nexport interface UserState {\r\n  users: User[];\r\n  user: User| null ;\r\n  isLoading: boolean;\r\n  error: string;\r\n  loggedUser?:User|null\r\n}\r\n\r\nconst initialState:UserState = {\r\n  users: [],\r\n  user: null,\r\n  loggedUser:null,\r\n  isLoading: false,\r\n  error: ''\r\n};\r\n\r\n//this function will take care to return new state\r\nexport function reducer(state: UserState = initialState, action: any): UserState {\r\n  switch (action.type) {\r\n    case SET_LOADING: {\r\n      //destructure from the state object , return new state by spreading the currant state\r\n      // the actual change of the state by the reducer will take place depending on the action.type the is determend bu \r\n      //the action : the first chain on the state management . the reducer is the second one.\r\n      //documentation: State changes are handled by pure functions called reducers that take the current state and the latest action to compute a new state\r\n      // every change create a new state which allow angular to keep track on tree of changes :\r\n      // some props have not changes during the state creation : so we have anew and old state and we can keep on the changes\r\n      // similar to virtual dom on react ?\r\n      //store is an observable that we can subscribe to it.\r\n      const { isLoading } = action;\r\n      console.log(`Reducer: Setting isLoading to ${isLoading}`);\r\n      //the spread operator responsible for returned a new state (we cant change existing one).\r\n      // maybe i can also try with object.assign\r\n      return { ...state, isLoading, error: '' };\r\n    } case SET_ERROR: {\r\n      const { error } = action;\r\n      console.log(`Reducer: Setting user error`, error);\r\n      return { ...state, error, isLoading: false };\r\n    } case LOADED_USERS: {\r\n      console.log(action); // return from app.effects - return type+array from observable of query\r\n      const { users } = action; // return from app.effects - return type+array from observable of query\r\n      console.log(`Reducer: Setting loaded users (${users.length}) users`);\r\n      return { ...state, users, isLoading: false, error: '' };\r\n    } case LOADED_USER: {\r\n      const { user } = action;\r\n      console.log(`Reducer: Setting loaded user ${user.password}`);\r\n      return { ...state, user, error: '' };\r\n    } case REMOVED_USER: {\r\n      const { userPassword } = action;\r\n      console.log('Reducer: Removing user:', userPassword);\r\n      const users = state.users.filter(user => user.password !== userPassword)\r\n      return { ...state, users, error: '' };\r\n    } case ADDED_USER: {\r\n      const { user } = action; \r\n      console.log('Reducer: Adding user:', user);\r\n      // const users = [...state.users, user];\r\n      return { ...state,user:user, error: '' };\r\n    } case UPDATED_USER: {\r\n      const { user } = action;\r\n      console.log('Reducer: Updating user:', user);\r\n      const users = state.users.map(currUser => (currUser.password === user.password) ? user : currUser)\r\n      return { ...state, users, user, error: '' };\r\n    }\r\n    case LOADED_LOGGED_USER: {\r\n      const { user } = action; \r\n     let loggedUser=user.user\r\n      console.log('Reducer: loading logged user:', user);\r\n      // const users = [...state.users, user];\r\n      return { ...state,loggedUser:loggedUser, error: '' };\r\n    }\r\n     default:\r\n      return state;\r\n  }\r\n}\r\n","// import { storageService } from './async-storage.service'\r\n// import { httpService } from './http.service'\r\n// import { HttpClient } from '@angular/common/http';\r\n// import { Injectable } from '@angular/core';\r\n// import { User} from '../models/user';\r\n// import { Observable, from } from 'rxjs';\r\n// import { Store } from '@ngrx/store';\r\n// import { Item ,rawItem} from '../models/item';\r\n// import { LoadingItems } from '../store/actions/item.actions';\r\n// import { ItemState } from '../store/reducers/item.reducer';\r\n\r\n\r\n// // import { socketService} from './socket.service'\r\n// // import { socketService, SOCKET_EVENT_USER_UPDATED } from './socket.service'\r\n\r\n// const STORAGE_KEY_LOGGED_USER = 'loggedUser'\r\n// const SCORE_FOR_REVIEW = 10\r\n// // var gWatchedUser = null;\r\n\r\n// export const userService = {\r\n//     login,\r\n//     logout,\r\n//     signup,\r\n//     getUsers,\r\n//     getById,\r\n//     remove,\r\n//     update,\r\n//     getLoggedUser: getLoggedUser,\r\n//     increaseScore,\r\n//     addUserReview,\r\n//     _makeId,\r\n//     addUserOrder,\r\n//     addUserStay\r\n// }\r\n\r\n// // window.userService = userService\r\n\r\n// // Note: due to async, must run one by one...\r\n// // userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// // userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n// // userService.signup({fullname: 'Muki G', username: 'muki', password:'123', score: 100})\r\n\r\n// function getUsers() {\r\n//     return storageService.query('user')\r\n//     // return httpService.get(`user`)\r\n// }\r\n\r\n// async function getById(userId:any) {\r\n//     const user = await storageService.get('user', userId)\r\n//     // const user = await httpService.get(`user/${userId}`)\r\n//     // gWatchedUser = user;\r\n//     return user;\r\n// }\r\n// function remove(userId:any) {\r\n//     return storageService.remove('user', userId)\r\n//     // return httpService.delete(`user/${userId}`)\r\n// }\r\n\r\n// async function update(user:any) {\r\n//     // user = await httpService.put(`user/${user._id}`, user)\r\n//     // Handle case in which admin updates other user's details\r\n//     if (getLoggedUser()._id === user._id) _saveLocalUser(user)\r\n//     return user;\r\n// }\r\n\r\n// async function login(userCred:any) {\r\n//     const users = await storageService.query('user')\r\n//     const user = users.find(user => user.username === userCred.username)\r\n//     // return _saveLocalUser(user)\r\n\r\n//     // const user = await httpService.post('auth/login', userCred)\r\n//     // socketService.emit('login', user._id);\r\n//     if (user) return _saveLocalUser(user)\r\n// }\r\n// async function signup(userCred:any) {\r\n//     // userCred.score = 100;\r\n//     const user = await storageService.post('user', userCred)\r\n//     // const user = await httpService.post('auth/signup', userCred)\r\n//     // socketService.emit('set-user-socket', user._id);\r\n//     return _saveLocalUser(user)\r\n// }\r\n// async function logout() {\r\n//     sessionStorage.removeItem(STORAGE_KEY_LOGGED_USER)\r\n//     // socketService.emit('unset-user-socket');\r\n//     // return await httpService.post('auth/logout')\r\n// }\r\n\r\n// async function increaseScore(by = SCORE_FOR_REVIEW) {\r\n//     const user = getLoggedUser()\r\n//     user.score = user.score + by || by\r\n//     await update(user)\r\n//     return user.score\r\n// }\r\n\r\n// async function addUserReview(stat:any) {\r\n//     const user = getLoggedUser()\r\n//     if(!user.reviews) user.reviews=[]\r\n//     user.reviews.push(stat.review)\r\n//     await update(user)\r\n//     return user.reviews\r\n// }\r\n\r\n// async function addUserOrder({order}:any) {\r\n//     const user = getLoggedUser()\r\n//     if(!user.orders) user.orders=[]\r\n//     user.orders.push(order)\r\n//     await update(user)\r\n//     return user.orders\r\n// }\r\n\r\n// async function addUserStay({stay}:any) {\r\n//     const user = getLoggedUser()\r\n//     if(!user.stayes) user.stayes=[]\r\n//     user.stayes.push(stay)\r\n//     await update(user)\r\n//     return user.stayes\r\n// }\r\n\r\n\r\n\r\n\r\n// function _saveLocalUser(user:any) {\r\n//     sessionStorage.setItem(STORAGE_KEY_LOGGED_USER, JSON.stringify(user))\r\n//     return user\r\n// }\r\n\r\n// function getLoggedUser() {\r\n//     return JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGED_USER) || 'null')\r\n// }\r\n\r\n// function _makeId(length = 5) {\r\n//     var text = ''\r\n//     var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n//     for (var i = 0; i < length; i++) {\r\n//         text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n//     }\r\n//     return text\r\n// }\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, from, of } from 'rxjs';\r\nimport { Item ,rawItem} from '../models/item';\r\nimport { LoadingItems } from '../store/actions/item.actions';\r\nimport { UserState } from '../store/reducers/user.reducer';\r\nimport { storageService } from './async-storage.service';\r\nimport { httpService } from './http.service'\r\nimport { User} from '../models/user';\r\n\r\n\r\n\r\nconst ENTITY = 'user';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\nSTORAGE_KEY_LOGGED_USER = 'loggedUser';\r\nSCORE_FOR_REVIEW = 10\r\n  constructor(private store: Store<UserState>, private https: HttpClient) {\r\n    // If empty - load test data to storage\r\n    const users = JSON.parse(localStorage.getItem(ENTITY) || 'null');\r\n    if (!users || users.length === 0) {\r\n      console.log('Empty');\r\n    }\r\n  }\r\n  \r\n getUsers() {\r\n    return storageService.query('user')\r\n    // return httpService.get(`user`)\r\n}\r\n\r\nasync  getById(userId:any) {\r\n    const user = await storageService.get('user', userId)\r\n    // const user = await httpService.get(`user/${userId}`)\r\n    // gWatchedUser = user;\r\n    return user;\r\n}\r\n remove(userId:any) {\r\n    return storageService.remove('user', userId)\r\n    // return httpService.delete(`user/${userId}`)\r\n}\r\n\r\n update(user:User): Observable<User> {\r\n    // user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (this.getLoggedUser().id === user.id) this._saveLocalUser(user)\r\n    return of(user)\r\n}\r\n\r\n async login (userCred:any) {\r\n    let users = await storageService.query('user');\r\n    console.log(userCred)\r\n    let userCredId = users.find((user:any)=> \r\n        user.user.password === userCred.user.password && user.user.fullname === userCred.user.fullname);  \r\n    const user = users.find((user:any) => user.id === userCredId!.id);\r\n    console.log(user);\r\n    \r\n    // return _saveLocalUser(user)\r\n\r\n    // const user = await httpService.post('auth/login', userCred)\r\n    // socketService.emit('login', user._id);\r\n    if (user) return this._saveLocalUser(of(user))\r\n    else { return console.log('no user')};    \r\n}\r\n// async login (userCred:any) {\r\n//     const users = await storageService.query('user')\r\n//     const user = users.find(user => user.id === userCred.id)\r\n//     // return _saveLocalUser(user)\r\n\r\n//     // const user = await httpService.post('auth/login', userCred)\r\n//     // socketService.emit('login', user._id);\r\n//     if (user) return from(this._saveLocalUser(user))\r\n//     else { return console.log('no user')};    \r\n// }\r\n// async  signup(userCred:any) {\r\n//     // userCred.score = 100;\r\n//     const user = await storageService.post('user', userCred)\r\n//     // const user = await httpService.post('auth/signup', userCred)\r\n//     // socketService.emit('set-user-socket', user._id);\r\n//     return this._saveLocalUser(user) \r\n// }\r\n signup(userCred:any) : Observable<User>  {\r\n    // userCred.score = 100;\r\n    // userCred.id = this._makeId()\r\n    const user = from(storageService.post('user', userCred)); \r\n    // const user = await httpService.post('auth/signup', userCred)\r\n    // socketService.emit('set-user-socket', user._id);\r\n    // this._saveLocalUser(user)\r\n    return this._saveLocalUser(user)\r\n//    return user  \r\n}\r\n\r\n\r\nasync  logout() {\r\n    sessionStorage.removeItem(this.STORAGE_KEY_LOGGED_USER)\r\n    // socketService.emit('unset-user-socket');\r\n    // return await httpService.post('auth/logout')\r\n}\r\n\r\nasync  increaseScore(by = this.SCORE_FOR_REVIEW) {\r\n    const user = this.getLoggedUser()\r\n    user.score = user.score + by || by\r\n    await this.update(user)\r\n    return user.score\r\n}\r\n\r\nasync  addUserReview(stat:any) {\r\n    const user = this.getLoggedUser()\r\n    if(!user.reviews) user.reviews=[]\r\n    user.reviews.push(stat.review)\r\n    await this.update(user)\r\n    return user.reviews\r\n}\r\n\r\nasync  addUserOrder({order}:any) {\r\n    const user = this.getLoggedUser()\r\n    if(!user.orders) user.orders=[]\r\n    user.orders.push(order)\r\n    await this.update(user)\r\n    return user.orders\r\n}\r\n\r\nasync  addUserStay({stay}:any) {\r\n    const user = this.getLoggedUser()\r\n    if(!user.stayes) user.stayes=[]\r\n    user.stayes.push(stay)\r\n    await this.update(user)\r\n    return user.stayes\r\n}\r\n\r\n\r\n\r\n\r\n _saveLocalUser(user:any) :Observable<User> {\r\n     user.subscribe((user:any)=>{\r\n         sessionStorage.setItem(this.STORAGE_KEY_LOGGED_USER, JSON.stringify(user))\r\n     })\r\n    return of(user)\r\n}\r\n\r\n getLoggedUser() {\r\n    return JSON.parse(sessionStorage.getItem(this.STORAGE_KEY_LOGGED_USER) || 'null')\r\n}\r\n\r\n\r\ngetLoggedInUser() {\r\n    const user =  JSON.parse(sessionStorage.getItem(this.STORAGE_KEY_LOGGED_USER) || 'null');\r\n    return of(user)\r\n}\r\n\r\n _makeId(length = 5) {\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}\r\n}\r\n","import { Action } from '@ngrx/store';\n//Actions express unique events that happen throughout your application\nimport { Item, User } from 'src/app/models/item';\n\n//variables for log information\nexport const SET_LOADING = '[item] loading';\nexport const SET_ERROR = '[item] error';\nexport const LOAD_ITEMS = '[item]s load';\nexport const LOAD_ITEM = '[item] load';\nexport const LOADED_ITEM = '[item] loaded';\nexport const LOADED_ITEMS = '[item]s loaded';\nexport const REMOVE_ITEM = '[item] remove';\nexport const REMOVED_ITEM = '[item] removed';\nexport const SAVE_ITEM = '[item] saved';\nexport const ADDED_ITEM = '[item] added';\nexport const UPDATED_ITEM = '[item] updated';\n\n// export const ADDED_USER = '[user] added';\n// export const SAVE_USER = '[user] saved';\n// export const UPDATED_USER = '[user] updated';\n// export const LOADED_USER = '[user] loaded';\n// export const REMOVED_USER = '[user] removed';\n// export const LOAD_USERS = '[user]s load';\n// export const LOAD_USER = '[user] load';\n// export const LOADED_USERS = '[user]s loaded';\n// export const REMOVE_USER = '[user] remove';\n\n\n\nexport type ItemAction = LoadItems | LoadItem | RemoveItem | SaveItem;\n// export type UserAction = LoadUsers | LoadUser | RemoveUser | SaveUser\n\n//action doesn't actually perform , just arrange the data \n// as usual inside the constructor params : the input for the action\n//readonly : type script creature: cant be changed\nexport class LoadItems implements Action {\n  readonly type = LOAD_ITEMS;\n  constructor(public filterBy: string = '') {}\n}\nexport class LoadItem implements Action {\n  readonly type = LOAD_ITEM;\n  constructor(public itemId: string = '') {}\n}\nexport class RemoveItem implements Action {\n  readonly type = REMOVE_ITEM;\n  constructor(public itemId: string) {}\n}\n// when reducer gets it - he will push it to the store\nexport class LoadedItems implements Action {\n  readonly type = LOADED_ITEMS;\n  constructor(public items: Item[] = []) {}\n}\nexport class LoadedItem implements Action {\n  readonly type = LOADED_ITEM;\n  constructor(public item: Item) {}\n}\nexport class RemovedItem implements Action {\n  readonly type = REMOVED_ITEM;\n  constructor(public itemId: string) {}\n}\nexport class SaveItem implements Action {\n  readonly type = SAVE_ITEM;\n  constructor(public item: Item) {}\n}\nexport class AddedItem implements Action {\n  readonly type = ADDED_ITEM;\n  constructor(public item: Item) {}\n}\nexport class UpdatedItem implements Action {\n  readonly type = UPDATED_ITEM;\n  constructor(public item: Item) {}\n}\nexport class LoadingItems implements Action {\n  readonly type = SET_LOADING;\n  constructor(public isLoading: boolean = true) {}\n}\nexport class ItemError implements Action {\n  readonly type = SET_ERROR;\n  constructor(public error: string) {}\n}\n\n\n// export class AddedUser implements Action {\n//   readonly type = ADDED_USER;\n//   constructor(public user: User) {}\n// }\n// export class SaveUser implements Action {\n//   readonly type = SAVE_USER;\n//   constructor(public user: User) {}\n// }\n// export class RemoveUser implements Action {\n//   readonly type = REMOVED_USER;\n//   constructor(public user: User) {}\n// }\n// export class UpdatedUser implements Action {\n//   readonly type = UPDATED_USER;\n//   constructor(public user: User) {}\n// }\n// export class LoadedUser implements Action {\n//   readonly type = LOADED_USER;\n//   constructor(public user:User) {}\n// }\n\n// export class LoadUsers implements Action {\n//   readonly type = LOAD_USERS;\n//   constructor(public user:User) {}\n// }\n\n// export class LoadUser implements Action {\n//   readonly type = LOAD_USER;\n//   constructor(public user:User) {}\n// }\n\n// export class LoadedUsers implements Action {\n//   readonly type = LOADED_USERS;\n//   constructor(public user:User) {}\n// }\n\n// export class RemovedUser implements Action {\n//   readonly type = REMOVED_USER;\n//   constructor(public user:User) {}\n// }\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { User } from 'src/app/models/item';\nimport { State } from '../../store/store';\nimport { Observable, of } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\nimport { GetLoggedUser } from 'src/app/store/actions/user.actions';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './app-header.component.html',\n  styleUrls: ['./app-header.component.scss'],\n})\nexport class AppHeaderComponent implements OnInit {\n  loggedUser$: Observable<User | null|undefined>;\n  ll:any;\n  isShow:Boolean= true;\n  constructor(private store: Store<State>) {\n    this.loggedUser$ = this.store.select('userState').pipe(pluck('loggedUser'))!;\n  }\n  ngOnInit(): void {\n    this.store.dispatch(new GetLoggedUser());\n  }\n  findUser() {\n    // this.loggedUser$.subscribe((user) => console.log(user));\n  }\n  toggleShow() {\n    this.isShow = !this.isShow;\n  }\n  logout() {\n    // this.store.dispatch()\n    // console.log('loggin out');\n    \n}\n}\n","<nav class=\"nav-container flex space-between align-center\">\n  <div class=\"flex\">\n    <a\n      routerLinkActive=\"active-nav\"\n      routerLink=\"/home\"\n      [routerLinkActiveOptions]=\"{ exact: true }\"\n    >\n      <div class=\"flex align-center\">\n        <span class=\"nav-txt\">Home</span>\n      </div>\n    </a>\n    <!-- <a\n      routerLinkActive=\"active-nav\"\n      routerLink=\"/item\"\n      [routerLinkActiveOptions]=\"{ exact: true }\"\n    >\n      <div class=\"flex align-center\">\n        <span class=\"nav-txt\">Items</span>\n      </div>\n    </a> -->\n    <!-- <a\n      routerLinkActive=\"active-nav\"\n      routerLink=\"/login\"\n      [routerLinkActiveOptions]=\"{ exact: true }\"\n    >\n      <div class=\"flex align-center\">\n        <span class=\"nav-txt\">login</span>\n      </div>\n    </a> -->\n  </div>\n  <!-- <a routerLink=\"/home\">\n    <img src=\"./assets/img/logo.png\" alt=\"app-logo\" title=\"Go home\" />\n  </a> -->\n  <!-- <a routerLink=\"/login\"\n  routerLinkActive=\"active-nav\"\n  [routerLinkActiveOptions]=\"{ exact: true }\"\n  > -->\n    \n  <!-- <span class=\"nav-txt\">login</span>\n  </a>\n  <span class=\"hello-user\" *ngIf=\"(loggedUser$ | async)\"\n    ><a>Hello {{ (loggedUser$ | async).fullname }}</a>\n    <button (click)=\"findUser()\">ppp</button>\n  </span> -->\n\n  <span *ngIf=\"!(loggedUser$ | async)\">\n  <img  (click)=\"toggleShow()\"  class=\"dropdown\"  src=\"../../../assets/img/download.png\" >\n  <div [class.show]=\"isShow\">\n  <span   class=\" user\" >\n   <p> <a routerLink=\"/login\"\n    routerLinkActive=\"active-nav\"\n    [routerLinkActiveOptions]=\"{ exact: true }\"\n    >login</a></p>\n  <!-- <p>setting</p> -->\n  </span>\n  </div>\n  </span>\n  <div  (click)=\"toggleShow()\" class=\"dropdown\"  *ngIf=\"(loggedUser$ | async)\" > \n    <p>Hello {{ (loggedUser$ |async)!.fullname }}</p>\n    <div [class.show]=\"isShow\">\n  <p *ngIf=\"(loggedUser$ | async)\">logout</p>\n  <p> <a routerLink=\"/user-setting\"\n    routerLinkActive=\"active-nav\"\n    [routerLinkActiveOptions]=\"{ exact: true }\"\n    >Setting</a></p>\n    </div>\n\n      <!-- <div  *ngIf=\"(loggedUser$ | async)\"  [class.show]=\"isShow\" class=\"dropdownContent\">\n      <div class=\"hello-user\"><a>Hello {{ (loggedUser$ |async).fullname }}</a></div>\n       <hr  *ngIf=\"(loggedUser$ | async)\">\n      <span  *ngIf=\"(loggedUser$ | async)\" (click)=\"logout\"><a>Log Out</a></span> -->\n\n      <!-- <router-link *ngIf=\"!(loggedUser$ | async)\" to=\"/sign-up\">Log In</router-link> -->\n      <!-- <router-link to=\"/sign-up\">Sign Up</router-link> -->\n      <hr/>\n      </div>\n      <!-- </div> -->\n    <!-- </div> -->\n  \n\n\n</nav>\n<!-- \n<template>\n    <main class=\"nav-bar-container\">\n      <div class=\"nav-bar-main\">\n        <section class=\"header-container\">\n            <a routerLinkActive=\"active-nav\" routerLink=\"/home\" [routerLinkActiveOptions]=\"{exact: true}\"></a>\n        <div class=\"logo-container\">\n          <div class=\"logo-img-container\">\n            <img class=\"logo-img\" src=\"@/assets/imgs/app-logo/placetobnbred-logo.jpg\">\n          </div>\n          <div class=\"logo-title\">\n            placetobnb\n          </div>\n        </div>  \n       \n \n          <div class=\"side-header\">\n    \n          <nav class=\"nav-menu\">\n    \n            <a routerLinkActive=\"active-nav\" routerLink=\"/home\" [routerLinkActiveOptions]=\"{exact: true}\"></a> \n                <a routerLinkActive=\"active-nav\" routerLink=\"/item\" [routerLinkActiveOptions]=\"{exact: true}\"></a>\n         \n\n          </nav>\n    \n           <div class=\"dropdown\">\n            <span  class=\" user\" (click)=\"toogleShow()\">\n              <img\n                class=\"header-img\"\n                src=\"@/assets/imgs/user-login/download.png\"\n              /><img *ngIf=\"loggedInUser\"\n                class=\"header-img\"\n                src=\"@/assets/imgs/user-login/userGuest.a58b1fc1 - red.jpg\"\n              />\n              <img *ngIf=\"!loggedInUser\"\n                class=\"header-img\"\n                src=\"@/assets/imgs/user-login/userGuest.a58b1fc1 - dark.jpg\"\n              />\n\n            </span>\n            <div  >\n              <div  class=\"dropdownContent\">\n              <div class=\"hello-user\" *ngIf=\"loggedInUser\">\n                <!-- <a>Hello {{ loggedInUser.fullname }}</a> -->\n<!-- </div>\n               <hr *ngIf=\"loggedInUser\"/>\n              <span *ngIf=\"loggedInUser\" (click)=\"logout\"><a>Log Out</a></span>\n              \n              <a routerLinkActive=\"active-nav\" routerLink=\"/home\" [routerLinkActiveOptions]=\"{exact: true}\"></a> \n              <a routerLinkActive=\"active-nav\" routerLink=\"/item\" [routerLinkActiveOptions]=\"{exact: true}\"></a>\n              </div>\n              </div>\n            </div>\n            </div>\n        </section>\n          \n    </div>\n    </main>\n    </template>  -->\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule,  } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ItemAppComponent } from './pages/item-app/item-app.component';\nimport { LoginComponent } from './cmps/login/login.component';\nimport { UserSettingComponent } from './cmps/user-setting/user-setting.component';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'item', component: ItemAppComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'user-setting', component: UserSettingComponent },\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{useHash: true})],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}